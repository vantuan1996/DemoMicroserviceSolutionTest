version: '3.4'
networks:
  backend:
  frontend:
  #default:
  #  external:
  #    name: consul_network
services:
  #consul:
  # image: consul
  # networks:
  #    - consul
  # restart: always

   #ports:
   #  - "8500:8500"
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@12345#
    networks:
      - backend
    ports:
      - 18001:1433

  customerwebapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerwebapi
    #depends_on:
    #  - consul
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=customerdb
      - DB_NAME=dms_customer
      - DB_SA_PASSWORD=password@12345#
      #- "CONSUL_HTTP_ADDR=http://consul:8500"

  #consul:
  #  container_name: consul
  #  ports:
  #    - "8400:8400"
  #    - "8500:8500"
  #    - "8600:53/udp"
  #  image: consul
  #  command: ["agent", "-server", "-bootstrap", "-ui", "-client", "0.0.0.0"]
  #  labels:
  #    kompose.service.type: nodeport
  #    kompose.service.expose: "true"
  #    kompose.image-pull-policy: "Always"

  apigway:
    container_name: api-gway
    image: ${DOCKER_REGISTRY-}apigway
    #depends_on:
    #  - consul
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    build:
       context: .
       dockerfile: ApiGway/Dockerfile
    #environment:
    #  - "CONSUL_HTTP_ADDR=http://consul:8500"
    ports:
      - 8001:80
    networks:
      - backend
      - frontend



  blazorserveriu:
    container_name: blazor-web-iu
    image: ${DOCKER_REGISTRY-}blazorserveriu
    build:
      context: .
      dockerfile: BlazorServerIU/Dockerfile
    ports:
      - 8002:80
    networks:
      - frontend
  



  orderwebapi:
    image: ${DOCKER_REGISTRY-}orderwebapi
    build:
      context: .
      dockerfile: OrderWebApi/Dockerfile
